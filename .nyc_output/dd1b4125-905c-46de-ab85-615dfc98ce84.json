{"/Users/vadim/DevPersonal/bioinformatics/exercises/ch1/ba1a.ts":{"path":"/Users/vadim/DevPersonal/bioinformatics/exercises/ch1/ba1a.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":12},"end":{"line":4,"column":13}},"2":{"start":{"line":5,"column":20},"end":{"line":5,"column":48}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":18}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":62}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":13}},"7":{"start":{"line":12,"column":15},"end":{"line":12,"column":23}},"8":{"start":{"line":12,"column":35},"end":{"line":12,"column":43}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}}},"fnMap":{"0":{"name":"countPattern","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"loc":{"start":{"line":3,"column":37},"end":{"line":10,"column":1}},"line":3},"1":{"name":"ba1a","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":13}},"loc":{"start":{"line":11,"column":21},"end":{"line":14,"column":1}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/vadim/DevPersonal/bioinformatics/exercises/ch1/ba1a.ts","sources":["/Users/vadim/DevPersonal/bioinformatics/exercises/ch1/ba1a.ts"],"names":[],"mappings":";;AAAA,SAAS,YAAY,CAAC,IAAY,EAAE,OAAe;IAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAE,EAAE;QACjC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,CAAC;KACzD;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,SAAwB,IAAI,CAAC,KAAe;IACjC,IAAA,IAAI,GAAa,KAAK,GAAlB,EAAE,OAAO,GAAI,KAAK,GAAT,CAAU;IAC9B,OAAO,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,uBAGC","sourcesContent":["function countPattern(text: string, pattern: string) {\n    let n = 0;\n    const lastIndex = text.length - pattern.length;\n    for (let i = 0; i <= lastIndex; i++) {\n        n += +(text.slice(i, i + pattern.length) === pattern);\n    }\n    return n;\n}\n\nexport default function ba1a(input: string[]) {\n    const [text, pattern] = input;\n    return countPattern(text, pattern);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"33842ae24eaf1eac969d9cd89417af97dedb88b6","contentHash":"4b4cafaf4798c9c8b233b684a7e3e4e950ed6a0fa840514f0571cd67cff071f4"}}